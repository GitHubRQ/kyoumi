<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aikon.wht.dao.IndividualMapper" >
  <resultMap id="BaseResultMap" type="com.aikon.wht.entity.Individual" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="creatorId" property="creatorId" jdbcType="INTEGER" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="mail" property="mail" jdbcType="VARCHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="mailMd5Hash" property="mailMd5Hash" jdbcType="VARCHAR" />
    <result column="photoKey" property="photoKey" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="role" property="role" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, createTime, updateTime, creatorId, memo, status, name, birthday, mail, passwd, 
    description, level, score, mailMd5Hash, photoKey, sex, role
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.aikon.wht.entity.IndividualExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kyoumi_individual
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from kyoumi_individual
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from kyoumi_individual
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aikon.wht.entity.IndividualExample" >
    delete from kyoumi_individual
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aikon.wht.entity.Individual" >
    insert into kyoumi_individual (id, createTime, updateTime, 
      creatorId, memo, status, 
      name, birthday, mail, 
      passwd, description, level, 
      score, mailMd5Hash, photoKey, 
      sex, role)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{creatorId,jdbcType=INTEGER}, #{memo,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{name,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, 
      #{passwd,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER}, #{mailMd5Hash,jdbcType=VARCHAR}, #{photoKey,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{role,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.aikon.wht.entity.Individual" >
    insert into kyoumi_individual
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
      <if test="creatorId != null" >
        creatorId,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="mail != null" >
        mail,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="mailMd5Hash != null" >
        mailMd5Hash,
      </if>
      <if test="photoKey != null" >
        photoKey,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="role != null" >
        role,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="mailMd5Hash != null" >
        #{mailMd5Hash,jdbcType=VARCHAR},
      </if>
      <if test="photoKey != null" >
        #{photoKey,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aikon.wht.entity.IndividualExample" resultType="java.lang.Integer" >
    select count(*) from kyoumi_individual
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update kyoumi_individual
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatorId != null" >
        creatorId = #{record.creatorId,jdbcType=INTEGER},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null" >
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null" >
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.mailMd5Hash != null" >
        mailMd5Hash = #{record.mailMd5Hash,jdbcType=VARCHAR},
      </if>
      <if test="record.photoKey != null" >
        photoKey = #{record.photoKey,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update kyoumi_individual
    set id = #{record.id,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      creatorId = #{record.creatorId,jdbcType=INTEGER},
      memo = #{record.memo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      name = #{record.name,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER},
      mailMd5Hash = #{record.mailMd5Hash,jdbcType=VARCHAR},
      photoKey = #{record.photoKey,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      role = #{record.role,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aikon.wht.entity.Individual" >
    update kyoumi_individual
    <set >
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        creatorId = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="mailMd5Hash != null" >
        mailMd5Hash = #{mailMd5Hash,jdbcType=VARCHAR},
      </if>
      <if test="photoKey != null" >
        photoKey = #{photoKey,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aikon.wht.entity.Individual" >
    update kyoumi_individual
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      creatorId = #{creatorId,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      mailMd5Hash = #{mailMd5Hash,jdbcType=VARCHAR},
      photoKey = #{photoKey,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      role = #{role,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>